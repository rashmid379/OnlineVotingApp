{"ast":null,"code":"var _jsxFileName = \"/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/components/BallotComponent.tsx\";\nimport React, { useState } from \"react\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport function BallotComponent(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState([]);\n\n  const handleQuestionCheckToggle = question => () => {\n    const currentIndex = checked.indexOf(question);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const castVote = () => {\n    checked.map(item => item.yes = item.yes + 1);\n    const replaceElection = { ...props.currentElection\n    };\n    replaceElection.voterIds.push(props.currentVoter.id);\n    props.onCaptureElectionVotes(replaceElection);\n  };\n\n  const currentElectionVoteIds = props.currentElection.voterIds;\n  const hasCurrentUserVoted = currentElectionVoteIds ? currentElectionVoteIds.includes(props.currentVoter.id) : false; // console.log('hasCurrentUserVoted', hasCurrentUserVoted);\n\n  return !hasCurrentUserVoted ? /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Welcome \", props.currentVoter.firstName, \" \", props.currentVoter.lastName, \"! to \", props.currentElection.name), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Lets Capture Votes !\"), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.currentElection.questions && props.currentElection.questions.concat().map((question, index) => {\n    const labelId = `checkbox-list-secondary-label-${index}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: index,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${index + 1}.  ${question.content}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleQuestionCheckToggle(question),\n      checked: checked.indexOf(question) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => castVote(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Cast Vote\")) : /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"You have successfully submitted your vote !\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => props.onHandleReturn(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Return to Main Page\"));\n}","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/components/BallotComponent.tsx"],"names":["React","useState","createStyles","makeStyles","Button","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","BallotComponent","props","classes","checked","setChecked","handleQuestionCheckToggle","question","currentIndex","indexOf","newChecked","push","splice","castVote","map","item","yes","replaceElection","currentElection","voterIds","currentVoter","id","onCaptureElectionVotes","currentElectionVoteIds","hasCurrentUserVoted","includes","firstName","lastName","name","questions","concat","index","labelId","content","onHandleReturn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Election, Voter, Question } from '../models/App';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport type BallotComponentProps = {\n  currentVoter: Voter,\n  currentElection: Election,\n  elections: Election[],\n  onCaptureElectionVotes: (election: Election ) => void;\n  onHandleReturn: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 600,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport function BallotComponent(props:BallotComponentProps ) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState([] as Question[]);\n\n  const handleQuestionCheckToggle = (question: Question) => () => {\n    const currentIndex = checked.indexOf(question);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const castVote = () => {\n    checked.map(item => item.yes = item.yes + 1);\n    const replaceElection = {...props.currentElection};\n    replaceElection.voterIds.push(props.currentVoter.id);\n    props.onCaptureElectionVotes(replaceElection);\n  }\n\n  const currentElectionVoteIds = props.currentElection.voterIds;\n  const hasCurrentUserVoted = currentElectionVoteIds ? currentElectionVoteIds.includes(props.currentVoter.id) : false;\n  // console.log('hasCurrentUserVoted', hasCurrentUserVoted);\n  return (\n    !hasCurrentUserVoted ?\n      <section>\n        <h2 className=\"section-title\">Welcome {props.currentVoter.firstName} {props.currentVoter.lastName}! to {props.currentElection.name}</h2>\n        <h3 className=\"section-title\">Lets Capture Votes !</h3>\n\n        <List dense className={classes.root}>\n          {props.currentElection.questions && props.currentElection.questions.concat().map((question, index ) => {\n            const labelId = `checkbox-list-secondary-label-${index}`;\n            return (\n              <ListItem key={index} button>\n                <ListItemText id={labelId} primary={`${index + 1}.  ${question.content}`} />\n                <ListItemSecondaryAction>\n                <Checkbox\n                  edge=\"end\"\n                  onChange={handleQuestionCheckToggle(question)}\n                  checked={checked.indexOf(question) !== -1}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => castVote()}>Cast Vote</Button>\n      </section> :\n      <section>\n        <h1>You have successfully submitted your vote !</h1>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => props.onHandleReturn()}>Return to Main Page</Button>\n      </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}