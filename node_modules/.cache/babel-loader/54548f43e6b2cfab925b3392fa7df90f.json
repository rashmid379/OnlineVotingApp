{"ast":null,"code":"var _jsxFileName = \"/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/containers/AppContainer.tsx\";\nimport React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MainComponent } from '../components/MainComponent';\nimport * as AppActions from '../actions/AppActions';\nimport * as ElectionActions from '../actions/ElectionActions';\nimport * as CaptureVotesActions from '../actions/CaptureVotesActions';\nimport * as RegisterVotersActions from \"../actions/RegisterVotersActions\";\nexport function AppContainer() {\n  const voters = useSelector(state => state.voters);\n  const elections = useSelector(state => state.elections);\n  const expandedElectionId = useSelector(state => state.expandedElectionId);\n  const currentElection = useSelector(state => state.currentElection);\n  const currentVoter = useSelector(state => state.currentVoter);\n  const dispatch = useDispatch();\n  const registeredVotersSelectedTab = useSelector(state => state.registeredVotersSelectedTab || 0);\n  const registeredVotersTableSort = useSelector(state => state.registeredVotersTableSort || {\n    order: \"desc\",\n    orderedBy: \"id\"\n  });\n  const registeredVotersTablePage = useSelector(state => state.registeredVotersTablePage || 0);\n  const registeredVotersRowsPerPage = useSelector(state => state.registeredVotersRowsPerPage);\n  const registeredVotersSelectedVoters = useSelector(state => state.registeredVotersSelectedVoters);\n  const registeredVoterBeingEdited = useSelector(state => state.registeredVoterBeingEdited);\n  const boundActionsMap = bindActionCreators({\n    onExpandElectionRow: ElectionActions.createExpandElectionAction,\n    onCreateElection: ElectionActions.appendElection,\n    onHandleDrodownChange: CaptureVotesActions.createSetCurrentElectionAction,\n    onValidateVoter: CaptureVotesActions.createSetCurrentVoterAction,\n    onCaptureElectionVotes: CaptureVotesActions.submitElectionVotes,\n    onAddCar: AppActions.addVoter,\n    onAddVoter: AppActions.addVoter,\n    onHandleReturn: CaptureVotesActions.handleReturn,\n    onSaveVoter: AppActions.saveVoter,\n    registerVotersTabSelected: RegisterVotersActions.createRegisterVotersTabSelectedAction,\n    registeredVotersDeleteVoters: RegisterVotersActions.deleteVoters,\n    registeredVotersSortSelected: RegisterVotersActions.createRegisterVotersSortSelectedAction,\n    registeredVotersVotersSelected: RegisterVotersActions.createRegisterVotersSelectedAction,\n    registeredVotersTablePageUpdated: RegisterVotersActions.createRegisterVotersTablePageSelectedAction,\n    registeredVotersRowsPerPageUpdated: RegisterVotersActions.createRegisterVotersTableRowsSelectedAction,\n    registeredVotersRowEdited: RegisterVotersActions.createRegisterVotersTableEditSelectedAction\n  }, dispatch);\n  useEffect(() => {\n    dispatch(AppActions.refreshVoters());\n    dispatch(ElectionActions.refreshElections());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(MainComponent, Object.assign({\n    voters: voters,\n    elections: elections,\n    expandedElectionId: expandedElectionId,\n    currentElection: currentElection,\n    currentVoter: currentVoter,\n    registeredVotersSelectedTab: registeredVotersSelectedTab || 0,\n    registeredVotersTableSort: registeredVotersTableSort,\n    registeredVotersTablePage: registeredVotersTablePage,\n    registeredVotersRowsPerPage: registeredVotersRowsPerPage,\n    registeredVotersSelectedVoters: registeredVotersSelectedVoters,\n    registeredVoterBeingEdited: registeredVoterBeingEdited\n  }, boundActionsMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/containers/AppContainer.tsx"],"names":["React","useEffect","bindActionCreators","useSelector","useDispatch","MainComponent","AppActions","ElectionActions","CaptureVotesActions","RegisterVotersActions","AppContainer","voters","state","elections","expandedElectionId","currentElection","currentVoter","dispatch","registeredVotersSelectedTab","registeredVotersTableSort","order","orderedBy","registeredVotersTablePage","registeredVotersRowsPerPage","registeredVotersSelectedVoters","registeredVoterBeingEdited","boundActionsMap","onExpandElectionRow","createExpandElectionAction","onCreateElection","appendElection","onHandleDrodownChange","createSetCurrentElectionAction","onValidateVoter","createSetCurrentVoterAction","onCaptureElectionVotes","submitElectionVotes","onAddCar","addVoter","onAddVoter","onHandleReturn","handleReturn","onSaveVoter","saveVoter","registerVotersTabSelected","createRegisterVotersTabSelectedAction","registeredVotersDeleteVoters","deleteVoters","registeredVotersSortSelected","createRegisterVotersSortSelectedAction","registeredVotersVotersSelected","createRegisterVotersSelectedAction","registeredVotersTablePageUpdated","createRegisterVotersTablePageSelectedAction","registeredVotersRowsPerPageUpdated","createRegisterVotersTableRowsSelectedAction","registeredVotersRowEdited","createRegisterVotersTableEditSelectedAction","refreshVoters","refreshElections"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState, Election, Voter } from \"../models/App\";\nimport { MainComponent } from '../components/MainComponent';\nimport * as AppActions from '../actions/AppActions';\nimport * as ElectionActions from '../actions/ElectionActions';\nimport * as CaptureVotesActions from '../actions/CaptureVotesActions';\nimport * as RegisterVotersActions from \"../actions/RegisterVotersActions\";\nimport { TableSorting } from \"../components/RegisteredVotersTableComponent\";\n\nexport function AppContainer() {\n  const voters = useSelector<AppState, Voter[]>((state) => state.voters);\n  const elections = useSelector<AppState, Election[]>(\n    (state) => state.elections\n  );\n  const expandedElectionId = useSelector<AppState, number>(\n    (state) => state.expandedElectionId\n  );\n  const currentElection = useSelector<AppState, Election>(\n    (state) => state.currentElection\n  );\n  const currentVoter = useSelector<AppState, Voter>(\n    (state) => state.currentVoter\n  );\n\n  const dispatch = useDispatch();\n  const registeredVotersSelectedTab = useSelector<AppState, number>(\n    (state) => state.registeredVotersSelectedTab || 0\n  );\n\n  const registeredVotersTableSort = useSelector<AppState, TableSorting>(\n    (state) =>\n      state.registeredVotersTableSort || { order: \"desc\", orderedBy: \"id\" }\n  );\n  const registeredVotersTablePage = useSelector<AppState, number>(\n    (state) => state.registeredVotersTablePage || 0\n  );\n  const registeredVotersRowsPerPage = useSelector<AppState, number>(\n    (state) => state.registeredVotersRowsPerPage\n  );\n  const registeredVotersSelectedVoters = useSelector<AppState, number[]>(\n    (state) => state.registeredVotersSelectedVoters\n  );\n  const registeredVoterBeingEdited = useSelector<AppState, Voter | null>(\n    (state) => state.registeredVoterBeingEdited\n  );\n\n  const boundActionsMap = bindActionCreators(\n    {\n      onExpandElectionRow: ElectionActions.createExpandElectionAction,\n      onCreateElection: ElectionActions.appendElection,\n      onHandleDrodownChange: CaptureVotesActions.createSetCurrentElectionAction,\n      onValidateVoter: CaptureVotesActions.createSetCurrentVoterAction,\n      onCaptureElectionVotes: CaptureVotesActions.submitElectionVotes,\n      onAddCar: AppActions.addVoter,\n      onAddVoter: AppActions.addVoter,\n      onHandleReturn: CaptureVotesActions.handleReturn,\n      onSaveVoter: AppActions.saveVoter,\n      registerVotersTabSelected:\n        RegisterVotersActions.createRegisterVotersTabSelectedAction,\n      registeredVotersDeleteVoters: RegisterVotersActions.deleteVoters,\n      registeredVotersSortSelected:\n        RegisterVotersActions.createRegisterVotersSortSelectedAction,\n      registeredVotersVotersSelected:\n        RegisterVotersActions.createRegisterVotersSelectedAction,\n      registeredVotersTablePageUpdated:\n        RegisterVotersActions.createRegisterVotersTablePageSelectedAction,\n      registeredVotersRowsPerPageUpdated:\n        RegisterVotersActions.createRegisterVotersTableRowsSelectedAction,\n      registeredVotersRowEdited:\n        RegisterVotersActions.createRegisterVotersTableEditSelectedAction,\n    },\n    dispatch\n  );\n\n  useEffect(() => {\n    dispatch(AppActions.refreshVoters());\n    dispatch(ElectionActions.refreshElections());\n  }, [dispatch]);\n\n  return (\n    <MainComponent\n      voters={voters}\n      elections={elections}\n      expandedElectionId={expandedElectionId}\n      currentElection={currentElection}\n      currentVoter={currentVoter}\n      registeredVotersSelectedTab={registeredVotersSelectedTab || 0}\n      registeredVotersTableSort={registeredVotersTableSort}\n      registeredVotersTablePage={registeredVotersTablePage}\n      registeredVotersRowsPerPage={registeredVotersRowsPerPage}\n      registeredVotersSelectedVoters={registeredVotersSelectedVoters}\n      registeredVoterBeingEdited={registeredVoterBeingEdited}\n      {...boundActionsMap}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}