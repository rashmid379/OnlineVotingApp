{"ast":null,"code":"var _jsxFileName = \"/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/components/CaptureVotesComponent.tsx\";\nimport React, { useState } from \"react\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { BallotComponent } from './BallotComponent';\nimport '../styles/layout.css';\nconst useStyles = makeStyles(theme => createStyles({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport function CaptureVotesComponent(props) {\n  // console.log('elections', props.elections);\n  const classes = useStyles();\n  const [inputEmail, setInputEmail] = useState('');\n  const [hasVoted, setHasVoted] = useState(true); // const currentElectionVoteIds = props.currentElection.voterIds;\n  // const hasCurrentUserVoted = currentElectionVoteIds ? currentElectionVoteIds.includes(props.currentVoter.id) : false;\n\n  const handleDrodownChange = event => {\n    props.onHandleDrodownChange(props.elections.filter(election => election.name === event.target.value)[0]);\n  }; // console.log('hasCurrentUserVoted', hasCurrentUserVoted);\n\n\n  const isValidVoter = props.currentVoter && !(Object.keys(props.currentVoter).length === 0);\n  const isCurrentElection = props.currentElection && !(Object.keys(props.currentElection).length === 0);\n  let invalidVoterErrorMessage = 'Invalid Voter';\n\n  const change = e => {\n    setInputEmail(e.target.value);\n    validateVoterEmail(e.target.value);\n  };\n\n  const validateVoterEmail = inputEmail => {\n    const voters = props.voters.filter(voter => voter.email === inputEmail);\n\n    if (voters.length > 0) {\n      props.onValidateVoter(voters[0]);\n    }\n  };\n\n  const validateVoted = () => {\n    if (props.currentElection.voterIds.includes(props.currentVoter.id)) {\n      props.onValidateVoter({});\n      setHasVoted(true);\n      setInputEmail('');\n    } else {\n      setHasVoted(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Capture Votes\")), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Select a Ballot\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"election-list-select-label\",\n    id: \"select-election\",\n    value: isCurrentElection ? props.currentElection.name : \"\",\n    onChange: handleDrodownChange,\n    className: classes.selectEmpty,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 32\n    }\n  }, \"None\")), props.elections.map(election => /*#__PURE__*/React.createElement(MenuItem, {\n    key: election.id,\n    value: election.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 46\n    }\n  }, election.name)))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, isCurrentElection && /*#__PURE__*/React.createElement(TextField, {\n    id: \"email-input\",\n    label: \"email address\",\n    value: inputEmail,\n    onChange: change,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), isCurrentElection && inputEmail && !isValidVoter && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 64\n    }\n  }, invalidVoterErrorMessage), isValidVoter && /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: 10\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => validateVoted(),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Begin Voting\"))), /*#__PURE__*/React.createElement(\"aside\", {\n    id: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, isValidVoter && !hasVoted && /*#__PURE__*/React.createElement(BallotComponent, {\n    onCaptureElectionVotes: props.onCaptureElectionVotes,\n    onHandleReturn: props.onHandleReturn,\n    elections: props.elections,\n    currentElection: props.currentElection,\n    currentVoter: props.currentVoter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/components/CaptureVotesComponent.tsx"],"names":["React","useState","Select","MenuItem","createStyles","makeStyles","Button","TextField","BallotComponent","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","CaptureVotesComponent","props","classes","inputEmail","setInputEmail","hasVoted","setHasVoted","handleDrodownChange","event","onHandleDrodownChange","elections","filter","election","name","target","value","isValidVoter","currentVoter","Object","keys","length","isCurrentElection","currentElection","invalidVoterErrorMessage","change","e","validateVoterEmail","voters","voter","email","onValidateVoter","validateVoted","voterIds","includes","id","map","onCaptureElectionVotes","onHandleReturn"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent} from \"react\";\nimport { Election, Voter } from '../models/App';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { BallotComponent }from './BallotComponent';\nimport '../styles/layout.css';\n\nexport type CaptureVotesComponentProps = {\n  voters: Voter[],\n  elections: Election[],\n  currentElection: Election,\n  currentVoter: Voter,\n  onCaptureElectionVotes: (election: Election ) => void,\n  onHandleDrodownChange: (election: Election ) => void,\n  onValidateVoter: (voter: Voter ) => void,\n  onHandleReturn: () => void,\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nexport function CaptureVotesComponent(props:CaptureVotesComponentProps ) {\n\n // console.log('elections', props.elections);\n  const classes = useStyles();\n  const [ inputEmail, setInputEmail ] = useState('');\n  const [ hasVoted, setHasVoted ] = useState(true);\n\n  // const currentElectionVoteIds = props.currentElection.voterIds;\n  // const hasCurrentUserVoted = currentElectionVoteIds ? currentElectionVoteIds.includes(props.currentVoter.id) : false;\n\n  const handleDrodownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.onHandleDrodownChange(props.elections.filter(election => election.name === event.target.value)[0]);\n  }\n  // console.log('hasCurrentUserVoted', hasCurrentUserVoted);\n\n  const isValidVoter = props.currentVoter && !(Object.keys(props.currentVoter).length === 0);\n  const isCurrentElection = props.currentElection && !(Object.keys(props.currentElection).length === 0);\n  let invalidVoterErrorMessage = 'Invalid Voter';\n\n  type HTMLFormControls =\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n\n  const change = (e: ChangeEvent<HTMLFormControls>) => {\n    setInputEmail(e.target.value);\n    validateVoterEmail(e.target.value);\n  };\n\n  const validateVoterEmail = (inputEmail: string) => {\n    const voters = props.voters.filter(voter => voter.email === inputEmail);\n    if(voters.length > 0) {\n      props.onValidateVoter(voters[0]);\n    }\n  }\n\n  const validateVoted = () => {\n    if(props.currentElection.voterIds.includes(props.currentVoter.id)){\n      props.onValidateVoter({} as Voter);\n      setHasVoted(true);\n      setInputEmail('');\n    }else {\n      setHasVoted(false);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <header id=\"page-header\">\n        <h1>Capture Votes</h1>\n      </header>\n      <main id=\"content\">\n        <section>\n          <h2 className=\"section-title\">Select a Ballot</h2>\n          <Select\n              labelId=\"election-list-select-label\"\n              id=\"select-election\"\n              value={isCurrentElection ? props.currentElection.name : \"\"}\n              onChange={handleDrodownChange}\n              className={classes.selectEmpty}\n              fullWidth\n            >\n            <MenuItem value=\"\"><em>None</em></MenuItem>\n            {props.elections.map(election => <MenuItem key={election.id} value={election.name}>{election.name}</MenuItem>)}\n          </Select>\n        </section>\n        <section>\n          {isCurrentElection &&\n              <TextField id=\"email-input\" label=\"email address\" value={inputEmail} onChange={change} fullWidth />\n          }\n          {isCurrentElection && inputEmail && !isValidVoter && <p>{invalidVoterErrorMessage}</p>}\n          {isValidVoter &&\n              <Button style={{ marginTop: 10 }} variant=\"contained\" color=\"primary\" onClick={() => validateVoted()} fullWidth>Begin Voting</Button>\n          }\n        </section>\n      </main>\n      <aside id=\"sidebar\">\n        {\n          (isValidVoter && !hasVoted ) &&\n            <BallotComponent\n              onCaptureElectionVotes={props.onCaptureElectionVotes}\n              onHandleReturn={props.onHandleReturn}\n              elections={props.elections}\n              currentElection={props.currentElection}\n              currentVoter={props.currentVoter}\n          />\n        }\n      </aside>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}