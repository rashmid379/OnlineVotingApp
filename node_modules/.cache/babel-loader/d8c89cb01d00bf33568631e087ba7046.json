{"ast":null,"code":"var _jsxFileName = \"/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/components/CreateElectionComponent.tsx\";\nimport { Button, Container, createStyles, IconButton, List, ListItem, ListItemSecondaryAction, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Add, Delete } from '@material-ui/icons';\nimport React, { useState } from 'react';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function CreateElectionComponent({\n  onCreateElection\n}) {\n  const classes = useStyles();\n  const initialQuestion = {\n    id: 0,\n    content: '',\n    yes: 0,\n    no: 0\n  };\n  const initialElection = {\n    name: '',\n    year: 2020,\n    description: '',\n    questions: [{ ...initialQuestion\n    }],\n    voterIds: []\n  };\n  const [electionForm, setElectionForm] = useState({ ...initialElection\n  });\n\n  const changeElectionInfo = e => {\n    setElectionForm({ ...electionForm,\n      [e.target.name]: e.target.type === 'number' ? e.target.valueAsNumber : e.target.value\n    });\n  };\n\n  const changeElectionQuestions = id => {\n    return e => {\n      // update the particular question\n      const newElectionForm = { ...electionForm\n      };\n      const updatedQuestion = newElectionForm.questions.find(q => q.id === id);\n\n      if (updatedQuestion !== undefined) {\n        updatedQuestion.content = e.target.value;\n      }\n\n      setElectionForm(newElectionForm);\n    };\n  };\n\n  const addElectionQuestion = () => {\n    setElectionForm({ ...electionForm,\n      // new blank question\n      questions: electionForm.questions.concat({ ...initialQuestion,\n        id: Math.max(...electionForm.questions.map(q => q.id), 0) + 1\n      })\n    });\n  };\n\n  const removeElectionQuestion = id => {\n    return () => {\n      setElectionForm({ ...electionForm,\n        questions: electionForm.questions.filter(q => q.id !== id)\n      });\n    };\n  };\n\n  const createElection = () => {\n    onCreateElection(electionForm);\n    setElectionForm({ ...initialElection\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Create an Election\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Election Info\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    label: \"Name\",\n    fullWidth: true,\n    color: \"primary\",\n    onChange: changeElectionInfo,\n    value: electionForm.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"year\",\n    label: \"Year\",\n    fullWidth: true,\n    color: \"primary\",\n    type: \"number\",\n    onChange: changeElectionInfo,\n    value: electionForm.year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"description\",\n    label: \"Description\",\n    fullWidth: true,\n    color: \"primary\",\n    onChange: changeElectionInfo,\n    value: electionForm.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Questions\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, electionForm.questions.map(q => /*#__PURE__*/React.createElement(ListItem, {\n    key: q.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Question\",\n    fullWidth: true,\n    color: \"primary\",\n    value: q.content,\n    onChange: changeElectionQuestions(q.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: removeElectionQuestion(q.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    startIcon: /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 66\n      }\n    }),\n    onClick: addElectionQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Add Question\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: createElection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Create Election\")));\n}","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/components/CreateElectionComponent.tsx"],"names":["Button","Container","createStyles","IconButton","List","ListItem","ListItemSecondaryAction","TextField","makeStyles","Add","Delete","React","useState","useStyles","theme","root","margin","spacing","CreateElectionComponent","onCreateElection","classes","initialQuestion","id","content","yes","no","initialElection","name","year","description","questions","voterIds","electionForm","setElectionForm","changeElectionInfo","e","target","type","valueAsNumber","value","changeElectionQuestions","newElectionForm","updatedQuestion","find","q","undefined","addElectionQuestion","concat","Math","max","map","removeElectionQuestion","filter","createElection"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Container,\n  createStyles,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  TextField,\n  Theme,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Add, Delete } from '@material-ui/icons';\nimport React, { ChangeEvent, useState } from 'react';\nimport { ElectionForm } from '../models/App';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  })\n);\n\nexport type CreateElectionComponentProps = {\n  onCreateElection: (electionForm: ElectionForm) => void;\n};\n\nexport function CreateElectionComponent({ onCreateElection }: CreateElectionComponentProps) {\n  const classes = useStyles();\n\n  const initialQuestion = {\n    id: 0,\n    content: '',\n    yes: 0,\n    no: 0,\n  };\n\n  const initialElection = {\n    name: '',\n    year: 2020,\n    description: '',\n    questions: [\n      {\n        ...initialQuestion,\n      },\n    ],\n    voterIds: [],\n  };\n\n  const [electionForm, setElectionForm] = useState<ElectionForm>({\n    ...initialElection,\n  });\n\n  const changeElectionInfo = (e: ChangeEvent<HTMLInputElement>) => {\n    setElectionForm({\n      ...electionForm,\n      [e.target.name]: e.target.type === 'number' ? e.target.valueAsNumber : e.target.value,\n    });\n  };\n\n  const changeElectionQuestions = (id: number) => {\n    return (e: ChangeEvent<HTMLInputElement>) => {\n      // update the particular question\n      const newElectionForm = {\n        ...electionForm,\n      };\n      const updatedQuestion = newElectionForm.questions.find(q => q.id === id);\n      if (updatedQuestion !== undefined) {\n        updatedQuestion.content = e.target.value;\n      }\n\n      setElectionForm(newElectionForm);\n    };\n  };\n\n  const addElectionQuestion = () => {\n    setElectionForm({\n      ...electionForm,\n      // new blank question\n      questions: electionForm.questions.concat({\n        ...initialQuestion,\n        id: Math.max(...electionForm.questions.map(q => q.id), 0) + 1,\n      }),\n    });\n  };\n\n  const removeElectionQuestion = (id: number) => {\n    return () => {\n      setElectionForm({\n        ...electionForm,\n        questions: electionForm.questions.filter(q => q.id !== id),\n      });\n    };\n  };\n\n  const createElection = () => {\n    onCreateElection(electionForm);\n    setElectionForm({\n      ...initialElection,\n    });\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <h2>Create an Election</h2>\n      <h3>Election Info</h3>\n      <TextField\n        name=\"name\"\n        label=\"Name\"\n        fullWidth\n        color=\"primary\"\n        onChange={changeElectionInfo}\n        value={electionForm.name}\n      />\n      <TextField\n        name=\"year\"\n        label=\"Year\"\n        fullWidth\n        color=\"primary\"\n        type=\"number\"\n        onChange={changeElectionInfo}\n        value={electionForm.year}\n      />\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        fullWidth\n        color=\"primary\"\n        onChange={changeElectionInfo}\n        value={electionForm.description}\n      />\n      <h3>Questions</h3>\n      <List>\n        {electionForm.questions.map(q => (\n          <ListItem key={q.id}>\n            <TextField\n              label=\"Question\"\n              fullWidth\n              color=\"primary\"\n              value={q.content}\n              onChange={changeElectionQuestions(q.id)}\n            />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={removeElectionQuestion(q.id)}>\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <div className={classes.root}>\n        <Button variant=\"contained\" color=\"secondary\" startIcon={<Add />} onClick={addElectionQuestion}>\n          Add Question\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={createElection}>\n          Create Election\n        </Button>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}