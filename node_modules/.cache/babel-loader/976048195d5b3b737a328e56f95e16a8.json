{"ast":null,"code":"import { refreshVoters } from \"./AppActions\"; //Tab Selection\n\nexport const REGISTER_VOTERS_TAB_SELECTED_ACTION = \"REGISTER_VOTERS_TAB_SELECTED\";\nexport const createRegisterVotersTabSelectedAction = tabSelected => ({\n  type: REGISTER_VOTERS_TAB_SELECTED_ACTION,\n  payload: {\n    tabSelected\n  }\n});\nexport function isCreateRegisterVotersTabSelectedAction(action) {\n  return [REGISTER_VOTERS_TAB_SELECTED_ACTION].includes(action.type);\n} //Voter Deletion\n\nexport const DELETE_VOTERS_ACTION = \"DELETE_VOTERS\";\nexport const createDeleteVotersAction = votersToDelete => ({\n  type: DELETE_VOTERS_ACTION,\n  payload: {\n    votersToDelete\n  }\n});\nexport function isDeleteVotersAction(action) {\n  return [DELETE_VOTERS_ACTION].includes(action.type);\n}\nexport const deleteVoters = votersToDelete => {\n  return async dispatch => {\n    dispatch(createDeleteVotersAction(votersToDelete));\n    console.log(\"deleting\");\n    let promises = votersToDelete.map(voter => {\n      return fetch(`http://localhost:3060/voters/${voter}`, {\n        method: \"DELETE\"\n      });\n    });\n    await Promise.all(promises).then(() => {\n      refreshVoters()(dispatch);\n    });\n  };\n}; // Sort Table\n\nexport const REGISTER_VOTERS_SORT_SELECTED_ACTION = \"REGISTER_VOTERS_SORT_SELECTED\";\nexport const createRegisterVotersSortSelectedAction = sort => ({\n  type: REGISTER_VOTERS_SORT_SELECTED_ACTION,\n  payload: {\n    sort\n  }\n});\nexport function isRegisterVotersSortSelectedAction(action) {\n  return [REGISTER_VOTERS_SORT_SELECTED_ACTION].includes(action.type);\n} //   votersSelected: (voters: number[]) => void;\n\nexport const REGISTER_VOTERS_SELECTED_ACTION = \"REGISTER_VOTERS_SELECTED_ACTION\";\nexport const createRegisterVotersSelectedAction = voters => ({\n  type: REGISTER_VOTERS_SELECTED_ACTION,\n  payload: {\n    voters\n  }\n});\nexport function isRegisterVotersSelectedAction(action) {\n  return [REGISTER_VOTERS_SELECTED_ACTION].includes(action.type);\n} //   tablePageUpdated: (page: number) => void;\n\nexport const REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION = \"REGISTER_VOTERS_TABLE_PAGE_SELECTED\";\nexport const createRegisterVotersTablePageSelectedAction = page => ({\n  type: REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION,\n  payload: {\n    page\n  }\n});\nexport function isRegisterVotersTablePageSelectedAction(action) {\n  return [REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION].includes(action.type);\n} //   rowsPerPageUpdated: (rows: number) => void;\n\nexport const REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION = \"REGISTER_VOTERS_TABLE_ROWS_SELECTED\";\nexport const createRegisterVotersTableRowsSelectedAction = rows => ({\n  type: REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION,\n  payload: {\n    rows\n  }\n});\nexport function isRegisterVotersTableRowsSelectedAction(action) {\n  return [REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION].includes(action.type);\n}\nexport const REGISTER_VOTERS_EDIT_SELECTED_ACTION = \"REGISTER_VOTERS_EDIT_SELECTED\";\nexport const createRegisterVotersTableEditSelectedAction = voter => ({\n  type: REGISTER_VOTERS_EDIT_SELECTED_ACTION,\n  payload: {\n    voter\n  }\n});\nexport function isRegisterVotersTableEditSelectedAction(action) {\n  return [REGISTER_VOTERS_EDIT_SELECTED_ACTION].includes(action.type);\n}","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/actions/RegisterVotersActions.ts"],"names":["refreshVoters","REGISTER_VOTERS_TAB_SELECTED_ACTION","createRegisterVotersTabSelectedAction","tabSelected","type","payload","isCreateRegisterVotersTabSelectedAction","action","includes","DELETE_VOTERS_ACTION","createDeleteVotersAction","votersToDelete","isDeleteVotersAction","deleteVoters","dispatch","console","log","promises","map","voter","fetch","method","Promise","all","then","REGISTER_VOTERS_SORT_SELECTED_ACTION","createRegisterVotersSortSelectedAction","sort","isRegisterVotersSortSelectedAction","REGISTER_VOTERS_SELECTED_ACTION","createRegisterVotersSelectedAction","voters","isRegisterVotersSelectedAction","REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION","createRegisterVotersTablePageSelectedAction","page","isRegisterVotersTablePageSelectedAction","REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION","createRegisterVotersTableRowsSelectedAction","rows","isRegisterVotersTableRowsSelectedAction","REGISTER_VOTERS_EDIT_SELECTED_ACTION","createRegisterVotersTableEditSelectedAction","isRegisterVotersTableEditSelectedAction"],"mappings":"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","sourcesContent":["import { Action, Dispatch } from \"redux\";\nimport { TableSorting } from \"../components/RegisteredVotersTableComponent\";\nimport { Voter } from \"../models/App\";\nimport { refreshVoters } from \"./AppActions\";\n\n//Tab Selection\nexport const REGISTER_VOTERS_TAB_SELECTED_ACTION =\n  \"REGISTER_VOTERS_TAB_SELECTED\";\nexport interface RegisterVotersTabSelectedAction extends Action<string> {\n  payload: {\n    tabSelected: number;\n  };\n}\nexport type CreateRegisterVotersTabSelectedAction = (\n  tabSelected: number\n) => RegisterVotersTabSelectedAction;\n\nexport const createRegisterVotersTabSelectedAction: CreateRegisterVotersTabSelectedAction = (\n  tabSelected: number\n) => ({\n  type: REGISTER_VOTERS_TAB_SELECTED_ACTION,\n  payload: {\n    tabSelected,\n  },\n});\n\nexport function isCreateRegisterVotersTabSelectedAction(\n  action: Action<string>\n): action is RegisterVotersTabSelectedAction {\n  return [REGISTER_VOTERS_TAB_SELECTED_ACTION].includes(action.type);\n}\n\n//Voter Deletion\nexport const DELETE_VOTERS_ACTION = \"DELETE_VOTERS\";\nexport interface DeleteVotersAction extends Action<string> {\n  payload: {\n    votersToDelete: number[];\n  };\n}\nexport type CreateDeleteVotersAction = (\n  votersToDelete: number[]\n) => DeleteVotersAction;\n\nexport const createDeleteVotersAction: CreateDeleteVotersAction = (\n  votersToDelete: number[]\n) => ({\n  type: DELETE_VOTERS_ACTION,\n  payload: {\n    votersToDelete,\n  },\n});\n\nexport function isDeleteVotersAction(\n  action: Action<string>\n): action is DeleteVotersAction {\n  return [DELETE_VOTERS_ACTION].includes(action.type);\n}\n\nexport const deleteVoters = (votersToDelete: number[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(createDeleteVotersAction(votersToDelete));\n    console.log(\"deleting\");\n\n    let promises = votersToDelete.map((voter) => {\n      return fetch(`http://localhost:3060/voters/${voter}`, {\n        method: \"DELETE\",\n      });\n    });\n\n    await Promise.all(promises).then(() => {\n      refreshVoters()(dispatch);\n    });\n  };\n};\n\n// Sort Table\nexport const REGISTER_VOTERS_SORT_SELECTED_ACTION =\n  \"REGISTER_VOTERS_SORT_SELECTED\";\nexport interface RegisterVotersSortSelectedAction extends Action<string> {\n  payload: {\n    sort: TableSorting;\n  };\n}\nexport type CreateRegisterVotersSortSelectedAction = (\n  sort: TableSorting\n) => RegisterVotersSortSelectedAction;\n\nexport const createRegisterVotersSortSelectedAction: CreateRegisterVotersSortSelectedAction = (\n  sort: TableSorting\n) => ({\n  type: REGISTER_VOTERS_SORT_SELECTED_ACTION,\n  payload: {\n    sort,\n  },\n});\n\nexport function isRegisterVotersSortSelectedAction(\n  action: Action<string>\n): action is RegisterVotersSortSelectedAction {\n  return [REGISTER_VOTERS_SORT_SELECTED_ACTION].includes(action.type);\n}\n\n//   votersSelected: (voters: number[]) => void;\nexport const REGISTER_VOTERS_SELECTED_ACTION =\n  \"REGISTER_VOTERS_SELECTED_ACTION\";\nexport interface RegisterVotersSelectedAction extends Action<string> {\n  payload: {\n    voters: number[];\n  };\n}\nexport type CreateRegisterVotersSelectedAction = (\n  voters: number[]\n) => RegisterVotersSelectedAction;\n\nexport const createRegisterVotersSelectedAction: CreateRegisterVotersSelectedAction = (\n  voters: number[]\n) => ({\n  type: REGISTER_VOTERS_SELECTED_ACTION,\n  payload: {\n    voters,\n  },\n});\n\nexport function isRegisterVotersSelectedAction(\n  action: Action<string>\n): action is RegisterVotersSelectedAction {\n  return [REGISTER_VOTERS_SELECTED_ACTION].includes(action.type);\n}\n\n//   tablePageUpdated: (page: number) => void;\nexport const REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION =\n  \"REGISTER_VOTERS_TABLE_PAGE_SELECTED\";\nexport interface RegisterVotersTablePageSelectedAction extends Action<string> {\n  payload: {\n    page: number;\n  };\n}\nexport type CreateRegisterVotersTablePageSelectedAction = (\n  page: number\n) => RegisterVotersTablePageSelectedAction;\n\nexport const createRegisterVotersTablePageSelectedAction: CreateRegisterVotersTablePageSelectedAction = (\n  page: number\n) => ({\n  type: REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION,\n  payload: {\n    page,\n  },\n});\n\nexport function isRegisterVotersTablePageSelectedAction(\n  action: Action<string>\n): action is RegisterVotersTablePageSelectedAction {\n  return [REGISTER_VOTERS_TABLE_PAGE_SELECTED_ACTION].includes(action.type);\n}\n\n//   rowsPerPageUpdated: (rows: number) => void;\nexport const REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION =\n  \"REGISTER_VOTERS_TABLE_ROWS_SELECTED\";\nexport interface RegisterVotersTableRowsSelectedAction extends Action<string> {\n  payload: {\n    rows: number;\n  };\n}\nexport type CreateRegisterVotersTableRowsSelectedAction = (\n  rows: number\n) => RegisterVotersTableRowsSelectedAction;\n\nexport const createRegisterVotersTableRowsSelectedAction: CreateRegisterVotersTableRowsSelectedAction = (\n  rows: number\n) => ({\n  type: REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION,\n  payload: {\n    rows,\n  },\n});\n\nexport function isRegisterVotersTableRowsSelectedAction(\n  action: Action<string>\n): action is RegisterVotersTableRowsSelectedAction {\n  return [REGISTER_VOTERS_TABLE_ROWS_SELECTED_ACTION].includes(action.type);\n}\n\nexport const REGISTER_VOTERS_EDIT_SELECTED_ACTION =\n  \"REGISTER_VOTERS_EDIT_SELECTED\";\nexport interface RegisterVotersTableEditSelectedAction extends Action<string> {\n  payload: {\n    voter: Voter;\n  };\n}\nexport type CreateRegisterVotersTableEditSelectedAction = (\n  voter: Voter\n) => RegisterVotersTableEditSelectedAction;\n\nexport const createRegisterVotersTableEditSelectedAction: CreateRegisterVotersTableEditSelectedAction = (\n  voter: Voter\n) => ({\n  type: REGISTER_VOTERS_EDIT_SELECTED_ACTION,\n  payload: {\n    voter,\n  },\n});\n\nexport function isRegisterVotersTableEditSelectedAction(\n  action: Action<string>\n): action is RegisterVotersTableEditSelectedAction {\n  return [REGISTER_VOTERS_EDIT_SELECTED_ACTION].includes(action.type);\n}\n"]},"metadata":{},"sourceType":"module"}