{"ast":null,"code":"//\n// start Election actions\n//\nexport const REFRESH_ELECTIONS_REQUEST_ACTION = 'REFRESH_ELECTIONS_REQUEST';\nexport const REFRESH_ELECTIONS_DONE_ACTION = 'REFRESH_ELECTIONS_DONE';\nexport const EXPAND_ELECTION_ACTION = 'EXPAND_ELECTION';\nexport const APPEND_ELECTION_ACTION = 'APPEND_ELECTION';\nexport const createRefreshElectionsRequestAction = () => ({\n  type: REFRESH_ELECTIONS_REQUEST_ACTION\n});\nexport const createRefreshElectionsDoneAction = elections => ({\n  type: REFRESH_ELECTIONS_DONE_ACTION,\n  payload: {\n    elections\n  }\n});\nexport const createExpandElectionAction = expandedElectionId => ({\n  type: EXPAND_ELECTION_ACTION,\n  payload: {\n    expandedElectionId\n  }\n});\nexport const createAppendElectionAction = election => ({\n  type: APPEND_ELECTION_ACTION,\n  payload: {\n    election\n  }\n});\nexport function isRefreshElectionsRequestAction(action) {\n  return [REFRESH_ELECTIONS_REQUEST_ACTION].includes(action.type);\n}\nexport function isRefreshElectionsDoneAction(action) {\n  return [REFRESH_ELECTIONS_DONE_ACTION].includes(action.type);\n}\nexport function isExpandElectionAction(action) {\n  return [EXPAND_ELECTION_ACTION].includes(action.type);\n}\nexport function isAppendElectionAction(action) {\n  return [APPEND_ELECTION_ACTION].includes(action.type);\n}\nexport const refreshElections = () => {\n  return async dispatch => {\n    dispatch(createRefreshElectionsRequestAction());\n    const res = await fetch('http://localhost:3060/elections');\n    const elections = await res.json();\n    dispatch(createRefreshElectionsDoneAction(elections));\n  };\n};\nexport const appendElection = electionForm => {\n  return async dispatch => {\n    const appendedElection = await fetch('http://localhost:3060/elections', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(electionForm)\n    }).then(res => res.json());\n    dispatch(createAppendElectionAction(appendedElection));\n  };\n}; //\n// end Election actions\n//","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/actions/ElectionActions.ts"],"names":["REFRESH_ELECTIONS_REQUEST_ACTION","REFRESH_ELECTIONS_DONE_ACTION","EXPAND_ELECTION_ACTION","APPEND_ELECTION_ACTION","createRefreshElectionsRequestAction","type","createRefreshElectionsDoneAction","elections","payload","createExpandElectionAction","expandedElectionId","createAppendElectionAction","election","isRefreshElectionsRequestAction","action","includes","isRefreshElectionsDoneAction","isExpandElectionAction","isAppendElectionAction","refreshElections","dispatch","res","fetch","json","appendElection","electionForm","appendedElection","method","headers","body","JSON","stringify","then"],"mappings":"AAGA;AACA;AACA;AAEA,OAAO,MAAMA,gCAAgC,GAAG,2BAAzC;AACP,OAAO,MAAMC,6BAA6B,GAAG,wBAAtC;AACP,OAAO,MAAMC,sBAAsB,GAAG,iBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,iBAA/B;AAwBP,OAAO,MAAMC,mCAAwE,GAAG,OAAO;AAC7FC,EAAAA,IAAI,EAAEL;AADuF,CAAP,CAAjF;AAIP,OAAO,MAAMM,gCAAkE,GAAIC,SAAD,KAA4B;AAC5GF,EAAAA,IAAI,EAAEJ,6BADsG;AAE5GO,EAAAA,OAAO,EAAE;AACPD,IAAAA;AADO;AAFmG,CAA5B,CAA3E;AAOP,OAAO,MAAME,0BAAsD,GAAIC,kBAAD,KAAiC;AACrGL,EAAAA,IAAI,EAAEH,sBAD+F;AAErGM,EAAAA,OAAO,EAAE;AACPE,IAAAA;AADO;AAF4F,CAAjC,CAA/D;AAOP,OAAO,MAAMC,0BAAsD,GAAIC,QAAD,KAAyB;AAC7FP,EAAAA,IAAI,EAAEF,sBADuF;AAE7FK,EAAAA,OAAO,EAAE;AACPI,IAAAA;AADO;AAFoF,CAAzB,CAA/D;AAOP,OAAO,SAASC,+BAAT,CAAyCC,MAAzC,EAA0G;AAC/G,SAAO,CAACd,gCAAD,EAAmCe,QAAnC,CAA4CD,MAAM,CAACT,IAAnD,CAAP;AACD;AAED,OAAO,SAASW,4BAAT,CAAsCF,MAAtC,EAAoG;AACzG,SAAO,CAACb,6BAAD,EAAgCc,QAAhC,CAAyCD,MAAM,CAACT,IAAhD,CAAP;AACD;AAED,OAAO,SAASY,sBAAT,CAAgCH,MAAhC,EAAwF;AAC7F,SAAO,CAACZ,sBAAD,EAAyBa,QAAzB,CAAkCD,MAAM,CAACT,IAAzC,CAAP;AACD;AAED,OAAO,SAASa,sBAAT,CAAgCJ,MAAhC,EAAwF;AAC7F,SAAO,CAACX,sBAAD,EAAyBY,QAAzB,CAAkCD,MAAM,CAACT,IAAzC,CAAP;AACD;AAED,OAAO,MAAMc,gBAAgB,GAAG,MAAM;AACpC,SAAO,MAAOC,QAAP,IAA8B;AACnCA,IAAAA,QAAQ,CAAChB,mCAAmC,EAApC,CAAR;AACA,UAAMiB,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AACA,UAAMf,SAAS,GAAG,MAAMc,GAAG,CAACE,IAAJ,EAAxB;AACAH,IAAAA,QAAQ,CAACd,gCAAgC,CAACC,SAAD,CAAjC,CAAR;AACD,GALD;AAMD,CAPM;AASP,OAAO,MAAMiB,cAAc,GAAIC,YAAD,IAAgC;AAC5D,SAAO,MAAOL,QAAP,IAA8B;AACnC,UAAMM,gBAAgB,GAAG,MAAMJ,KAAK,CAAC,iCAAD,EAAoC;AACtEK,MAAAA,MAAM,EAAE,MAD8D;AAEtEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF6D;AAGtEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;AAHgE,KAApC,CAAL,CAI5BO,IAJ4B,CAIvBX,GAAG,IAAIA,GAAG,CAACE,IAAJ,EAJgB,CAA/B;AAKAH,IAAAA,QAAQ,CAACT,0BAA0B,CAACe,gBAAD,CAA3B,CAAR;AACD,GAPD;AAQD,CATM,C,CAWP;AACA;AACA","sourcesContent":["import { Action, Dispatch } from 'redux';\nimport { Election, ElectionForm } from '../models/App';\n\n//\n// start Election actions\n//\n\nexport const REFRESH_ELECTIONS_REQUEST_ACTION = 'REFRESH_ELECTIONS_REQUEST';\nexport const REFRESH_ELECTIONS_DONE_ACTION = 'REFRESH_ELECTIONS_DONE';\nexport const EXPAND_ELECTION_ACTION = 'EXPAND_ELECTION';\nexport const APPEND_ELECTION_ACTION = 'APPEND_ELECTION';\n\nexport type RefreshElectionsRequestAction = Action<string>;\nexport interface RefreshElectionsDoneAction extends Action<string> {\n  payload: {\n    elections: Election[];\n  };\n}\nexport interface ExpandElectionAction extends Action<string> {\n  payload: {\n    expandedElectionId: number;\n  };\n}\nexport interface AppendElectionAction extends Action<string> {\n  payload: {\n    election: Election;\n  };\n}\n\nexport type CreateRefreshElectionsRequestAction = () => RefreshElectionsRequestAction;\nexport type CreateRefreshElectionsDoneAction = (election: Election[]) => RefreshElectionsDoneAction;\nexport type CreateExpandElectionAction = (expandedElectionId: number) => ExpandElectionAction;\nexport type CreateAppendElectionAction = (election: Election) => AppendElectionAction;\n\nexport const createRefreshElectionsRequestAction: CreateRefreshElectionsRequestAction = () => ({\n  type: REFRESH_ELECTIONS_REQUEST_ACTION,\n});\n\nexport const createRefreshElectionsDoneAction: CreateRefreshElectionsDoneAction = (elections: Election[]) => ({\n  type: REFRESH_ELECTIONS_DONE_ACTION,\n  payload: {\n    elections,\n  },\n});\n\nexport const createExpandElectionAction: CreateExpandElectionAction = (expandedElectionId: number) => ({\n  type: EXPAND_ELECTION_ACTION,\n  payload: {\n    expandedElectionId,\n  },\n});\n\nexport const createAppendElectionAction: CreateAppendElectionAction = (election: Election) => ({\n  type: APPEND_ELECTION_ACTION,\n  payload: {\n    election,\n  },\n});\n\nexport function isRefreshElectionsRequestAction(action: Action<string>): action is RefreshElectionsRequestAction {\n  return [REFRESH_ELECTIONS_REQUEST_ACTION].includes(action.type);\n}\n\nexport function isRefreshElectionsDoneAction(action: Action<string>): action is RefreshElectionsDoneAction {\n  return [REFRESH_ELECTIONS_DONE_ACTION].includes(action.type);\n}\n\nexport function isExpandElectionAction(action: Action<string>): action is ExpandElectionAction {\n  return [EXPAND_ELECTION_ACTION].includes(action.type);\n}\n\nexport function isAppendElectionAction(action: Action<string>): action is AppendElectionAction {\n  return [APPEND_ELECTION_ACTION].includes(action.type);\n}\n\nexport const refreshElections = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch(createRefreshElectionsRequestAction());\n    const res = await fetch('http://localhost:3060/elections');\n    const elections = await res.json();\n    dispatch(createRefreshElectionsDoneAction(elections));\n  };\n};\n\nexport const appendElection = (electionForm: ElectionForm) => {\n  return async (dispatch: Dispatch) => {\n    const appendedElection = await fetch('http://localhost:3060/elections', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(electionForm),\n    }).then(res => res.json());\n    dispatch(createAppendElectionAction(appendedElection));\n  };\n};\n\n//\n// end Election actions\n//\n"]},"metadata":{},"sourceType":"module"}