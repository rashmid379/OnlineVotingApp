{"ast":null,"code":"//\n// start Voter actions\n//\nexport const REFRESH_VOTERS_REQUEST_ACTION = \"REFRESH_VOTERS_REQUEST\";\nexport const REFRESH_VOTERS_DONE_ACTION = \"REFRESH_VOTERS_DONE\";\nexport const ADD_VOTERS_REQUEST_ACTION = \"ADD_VOTERS_REQUEST\";\nexport const SAVE_VOTER_REQUEST_ACTION = \"SAVE_VOTER_REQUEST\";\nexport const createAddVotersRequestAction = voter => ({\n  type: ADD_VOTERS_REQUEST_ACTION,\n  payload: {\n    voter\n  }\n});\nexport const createSaveVoterRequestAction = voter => ({\n  type: ADD_VOTERS_REQUEST_ACTION,\n  payload: {\n    voter\n  }\n});\nexport const createRefreshVotersRequestAction = () => ({\n  type: REFRESH_VOTERS_REQUEST_ACTION\n});\nexport const createRefreshVotersDoneAction = voters => ({\n  type: REFRESH_VOTERS_DONE_ACTION,\n  payload: {\n    voters\n  }\n});\nexport function isRefreshVotersRequestAction(action) {\n  return [REFRESH_VOTERS_REQUEST_ACTION].includes(action.type);\n}\nexport function isRefreshVotersDoneAction(action) {\n  return [REFRESH_VOTERS_DONE_ACTION].includes(action.type);\n}\nexport const refreshVoters = () => {\n  return async dispatch => {\n    dispatch(createRefreshVotersRequestAction());\n    const res = await fetch(\"http://localhost:3060/voters\");\n    const voters = await res.json();\n    dispatch(createRefreshVotersDoneAction(voters));\n  };\n}; //\n// end Voter actions\n// start Election actions\n//\n\nexport const REFRESH_ELECTIONS_REQUEST_ACTION = \"REFRESH_ELECTIONS_REQUEST\";\nexport const REFRESH_ELECTIONS_DONE_ACTION = \"REFRESH_ELECTIONS_DONE\";\nexport const createRefreshElectionsRequestAction = () => ({\n  type: REFRESH_ELECTIONS_REQUEST_ACTION\n});\nexport const createRefreshElectionsDoneAction = elections => ({\n  type: REFRESH_ELECTIONS_DONE_ACTION,\n  payload: {\n    elections\n  }\n});\nexport function isRefreshElectionsRequestAction(action) {\n  return [REFRESH_ELECTIONS_REQUEST_ACTION].includes(action.type);\n}\nexport function isRefreshElectionsDoneAction(action) {\n  return [REFRESH_ELECTIONS_DONE_ACTION].includes(action.type);\n}\nexport const refreshElections = () => {\n  return async dispatch => {\n    dispatch(createRefreshElectionsRequestAction());\n    const res = await fetch(\"http://localhost:3060/elections\");\n    const elections = await res.json();\n    dispatch(createRefreshElectionsDoneAction(elections));\n  };\n}; //\n// end Election actions\n//\n// type to encapsulate all the actions we are offering\n\nexport const addVoter = voter => {\n  return async dispatch => {\n    dispatch(createAddVotersRequestAction(voter));\n    await fetch(\"http://localhost:3060/voters\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(voter)\n    });\n    dispatch(createRefreshVotersRequestAction());\n  };\n};\nexport const saveVoter = voter => {\n  return async dispatch => {\n    dispatch(createSaveVoterRequestAction(voter));\n    await fetch(`http://localhost:3060/voters/${voter.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(voter)\n    });\n    refreshVoters()(dispatch);\n  };\n};","map":{"version":3,"sources":["/Users/rashmid379/dev/training/FE_Bootcamp/OnlineVotingApp/src/actions/AppActions.ts"],"names":["REFRESH_VOTERS_REQUEST_ACTION","REFRESH_VOTERS_DONE_ACTION","ADD_VOTERS_REQUEST_ACTION","SAVE_VOTER_REQUEST_ACTION","createAddVotersRequestAction","voter","type","payload","createSaveVoterRequestAction","createRefreshVotersRequestAction","createRefreshVotersDoneAction","voters","isRefreshVotersRequestAction","action","includes","isRefreshVotersDoneAction","refreshVoters","dispatch","res","fetch","json","REFRESH_ELECTIONS_REQUEST_ACTION","REFRESH_ELECTIONS_DONE_ACTION","createRefreshElectionsRequestAction","createRefreshElectionsDoneAction","elections","isRefreshElectionsRequestAction","isRefreshElectionsDoneAction","refreshElections","addVoter","method","headers","body","JSON","stringify","saveVoter","id"],"mappings":"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","sourcesContent":["import { Action, Dispatch } from \"redux\";\nimport { Election, Voter } from \"../models/App\";\n\n//\n// start Voter actions\n//\n\nexport const REFRESH_VOTERS_REQUEST_ACTION = \"REFRESH_VOTERS_REQUEST\";\nexport const REFRESH_VOTERS_DONE_ACTION = \"REFRESH_VOTERS_DONE\";\nexport const ADD_VOTERS_REQUEST_ACTION = \"ADD_VOTERS_REQUEST\";\nexport const SAVE_VOTER_REQUEST_ACTION = \"SAVE_VOTER_REQUEST\";\n\nexport type RefreshVotersRequestAction = Action<string>;\nexport interface RefreshVotersDoneAction extends Action<string> {\n  payload: {\n    voters: Voter[];\n  };\n}\nexport type AddVotersRequestAction = Action<string>;\nexport type SaveVoterRequestAction = Action<string>;\n\nexport type CreateRefreshVotersRequestAction = () => RefreshVotersRequestAction;\nexport type CreateRefreshVotersDoneAction = (\n  voters: Voter[]\n) => RefreshVotersDoneAction;\n\nexport type CreateAddVotersRequestAction = (\n  voter: Voter\n) => AddVotersRequestAction;\nexport const createAddVotersRequestAction: CreateAddVotersRequestAction = (\n  voter\n) => ({\n  type: ADD_VOTERS_REQUEST_ACTION,\n  payload: {\n    voter,\n  },\n});\n\nexport type CreateSaveVoterRequestAction = (\n  voter: Voter\n) => SaveVoterRequestAction;\nexport const createSaveVoterRequestAction: CreateSaveVoterRequestAction = (\n  voter\n) => ({\n  type: ADD_VOTERS_REQUEST_ACTION,\n  payload: {\n    voter,\n  },\n});\n\nexport const createRefreshVotersRequestAction: CreateRefreshVotersRequestAction = () => ({\n  type: REFRESH_VOTERS_REQUEST_ACTION,\n});\n\nexport const createRefreshVotersDoneAction: CreateRefreshVotersDoneAction = (\n  voters: Voter[]\n) => ({\n  type: REFRESH_VOTERS_DONE_ACTION,\n  payload: {\n    voters,\n  },\n});\n\nexport function isRefreshVotersRequestAction(\n  action: Action<string>\n): action is RefreshVotersRequestAction {\n  return [REFRESH_VOTERS_REQUEST_ACTION].includes(action.type);\n}\n\nexport function isRefreshVotersDoneAction(\n  action: Action<string>\n): action is RefreshVotersDoneAction {\n  return [REFRESH_VOTERS_DONE_ACTION].includes(action.type);\n}\n\nexport const refreshVoters = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch(createRefreshVotersRequestAction());\n    const res = await fetch(\"http://localhost:3060/voters\");\n    const voters = await res.json();\n    dispatch(createRefreshVotersDoneAction(voters));\n  };\n};\n\n//\n// end Voter actions\n// start Election actions\n//\n\nexport const REFRESH_ELECTIONS_REQUEST_ACTION = \"REFRESH_ELECTIONS_REQUEST\";\nexport const REFRESH_ELECTIONS_DONE_ACTION = \"REFRESH_ELECTIONS_DONE\";\n\nexport type RefreshElectionsRequestAction = Action<string>;\nexport interface RefreshElectionsDoneAction extends Action<string> {\n  payload: {\n    elections: Election[];\n  };\n}\n\nexport type CreateRefreshElectionsRequestAction = () => RefreshElectionsRequestAction;\nexport type CreateRefreshElectionsDoneAction = (\n  election: Election[]\n) => RefreshElectionsDoneAction;\n\nexport const createRefreshElectionsRequestAction: CreateRefreshElectionsRequestAction = () => ({\n  type: REFRESH_ELECTIONS_REQUEST_ACTION,\n});\n\nexport const createRefreshElectionsDoneAction: CreateRefreshElectionsDoneAction = (\n  elections: Election[]\n) => ({\n  type: REFRESH_ELECTIONS_DONE_ACTION,\n  payload: {\n    elections,\n  },\n});\n\nexport function isRefreshElectionsRequestAction(\n  action: Action<string>\n): action is RefreshElectionsRequestAction {\n  return [REFRESH_ELECTIONS_REQUEST_ACTION].includes(action.type);\n}\n\nexport function isRefreshElectionsDoneAction(\n  action: Action<string>\n): action is RefreshElectionsDoneAction {\n  return [REFRESH_ELECTIONS_DONE_ACTION].includes(action.type);\n}\n\nexport const refreshElections = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch(createRefreshElectionsRequestAction());\n    const res = await fetch(\"http://localhost:3060/elections\");\n    const elections = await res.json();\n    dispatch(createRefreshElectionsDoneAction(elections));\n  };\n};\n\n//\n// end Election actions\n//\n\n// type to encapsulate all the actions we are offering\nexport type AppActions =\n  | RefreshVotersRequestAction\n  | RefreshElectionsDoneAction\n  | RefreshElectionsRequestAction\n  | RefreshElectionsDoneAction\n  | RefreshVotersRequestAction\n  | RefreshVotersDoneAction;\n\nexport const addVoter = (voter: Voter) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(createAddVotersRequestAction(voter));\n    await fetch(\"http://localhost:3060/voters\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(voter),\n    });\n    dispatch(createRefreshVotersRequestAction());\n  };\n};\n\nexport const saveVoter = (voter: Voter) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(createSaveVoterRequestAction(voter));\n    await fetch(`http://localhost:3060/voters/${voter.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(voter),\n    });\n    refreshVoters()(dispatch);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}